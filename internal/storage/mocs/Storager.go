// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/kTowkA/GophKeeper/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// Storager is an autogenerated mock type for the Storager type
type Storager struct {
	mock.Mock
}

// CreateFolder provides a mock function with given fields: _a0, _a1
func (_m *Storager) CreateFolder(_a0 context.Context, _a1 model.StorageCreateFolderRequest) (model.StorageCreateFolderResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateFolder")
	}

	var r0 model.StorageCreateFolderResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageCreateFolderRequest) (model.StorageCreateFolderResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageCreateFolderRequest) model.StorageCreateFolderResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageCreateFolderResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageCreateFolderRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Folders provides a mock function with given fields: _a0, _a1
func (_m *Storager) Folders(_a0 context.Context, _a1 model.StorageFoldersRequest) (model.StorageFoldersResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Folders")
	}

	var r0 model.StorageFoldersResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageFoldersRequest) (model.StorageFoldersResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageFoldersRequest) model.StorageFoldersResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageFoldersResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageFoldersRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Load provides a mock function with given fields: _a0, _a1
func (_m *Storager) Load(_a0 context.Context, _a1 model.StorageLoadRequest) (model.StorageLoadResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Load")
	}

	var r0 model.StorageLoadResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageLoadRequest) (model.StorageLoadResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageLoadRequest) model.StorageLoadResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageLoadResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageLoadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PasswordHash provides a mock function with given fields: _a0, _a1
func (_m *Storager) PasswordHash(_a0 context.Context, _a1 model.StoragePasswordHashRequest) (model.StoragePasswordHashResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PasswordHash")
	}

	var r0 model.StoragePasswordHashResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StoragePasswordHashRequest) (model.StoragePasswordHashResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StoragePasswordHashRequest) model.StoragePasswordHashResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StoragePasswordHashResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StoragePasswordHashRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *Storager) Register(_a0 context.Context, _a1 model.StorageRegisterRequest) (model.StorageRegisterResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Register")
	}

	var r0 model.StorageRegisterResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageRegisterRequest) (model.StorageRegisterResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageRegisterRequest) model.StorageRegisterResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageRegisterResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageRegisterRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0, _a1
func (_m *Storager) Save(_a0 context.Context, _a1 model.StorageSaveRequest) (model.StorageSaveResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 model.StorageSaveResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageSaveRequest) (model.StorageSaveResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageSaveRequest) model.StorageSaveResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageSaveResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageSaveRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Values provides a mock function with given fields: _a0, _a1
func (_m *Storager) Values(_a0 context.Context, _a1 model.StorageValuesRequest) (model.StorageValuesResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Values")
	}

	var r0 model.StorageValuesResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageValuesRequest) (model.StorageValuesResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.StorageValuesRequest) model.StorageValuesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.StorageValuesResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.StorageValuesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStorager creates a new instance of Storager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStorager(t interface {
	mock.TestingT
	Cleanup(func())
}) *Storager {
	mock := &Storager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
